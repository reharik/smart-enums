{
  "env": {
    "node": true,
    "jest": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "airbnb-base",
    "airbnb-typescript/base",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "jest"],
  "rules": {
    "@typescript-eslint/no-redeclare":"off",
    "@typescript-eslint/lines-between-class-members": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/space-before-blocks": "off",
    "@typescript-eslint/comma-dangle": "warn",
    "arrow-body-style": "off",
    "arrow-parens": "off",
    "class-methods-use-this": "off",
    "implicit-arrow-linebreak": "off",
    "import/prefer-default-export": "off",
    "import/order": "off",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.stories.*",
          "**/.storybook/**/*.*",
          "**/*.test.ts"
        ],
        "peerDependencies": true
      }
    ],
    "no-continue": "off",
    "no-confusing-arrow": "off",
    "no-nested-ternary": "warn",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-plusplus": "off",
    "no-underscore-dangle": "off",
    "no-promise-executor-return": "off",
    "consistent-return": "off",
    "operator-linebreak": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      { "selector": "typeParameter", "format": ["UPPER_CASE", "PascalCase"] }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.test.ts"],
      "rules": {
        "no-param-reassign": "off",
        "@typescript-eslint/no-shadow":"off"
      }
    }
  ]
}
